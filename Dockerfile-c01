FROM critoma/amd64_u24_noble_ism_security

ENV SHELL=/bin/bash

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive \
    apt-get install -y default-jre-headless \
    maven \
    curl \
    unzip &&  \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*
RUN curl -o- https://fnm.vercel.app/install | bash && \
    export PATH="/root/.local/share/fnm:$PATH" && \
    eval "`fnm env`" && \
    fnm install --lts && \
    fnm use lts-latest
RUN curl -fsSL https://bun.sh/install | bash
ENV PATH="/root/.local/share/fnm:/root/.bun/bin:$PATH"

WORKDIR /app

# build java backend
COPY ./c01-javalin-http-server/pom.xml /app/javalin-http-server/pom.xml
WORKDIR /app/javalin-http-server
RUN mvn dependency:go-offline

COPY ./c01-javalin-http-server/src /app/javalin-http-server/src
RUN mvn package

# build svelte frontend
WORKDIR /app
COPY ./c01-fe/ /app/c01-fe
WORKDIR /app/c01-fe
RUN bun install && bun run build

# create startup script
COPY <<EOF /app/start.sh
#!/bin/bash
set -e

echo "Starting services..."

# Start Javalin backend in background
cd /app/javalin-http-server
mvn exec:java -Dexec.mainClass=MainKt > /var/log/javalin.log 2>&1 &
JAVALIN_PID=\$!
echo "Javalin started with PID \$JAVALIN_PID"

# Start Svelte frontend in background
cd /app/c01-fe
python3 -m http.server 5432 --bind 0.0.0.0 --directory dist > /var/log/svelte.log 2>&1 &
SVELTE_PID=\$!
echo "Svelte frontend started with PID \$SVELTE_PID"

# Function to handle shutdown
cleanup() {
    echo "Shutting down services..."
    kill \$JAVALIN_PID \$SVELTE_PID 2>/dev/null || true
    wait
    exit 0
}

# Set up signal handlers
trap cleanup SIGTERM SIGINT

echo "Both services are running. Javalin PID: \$JAVALIN_PID, Svelte PID: \$SVELTE_PID"
echo "Logs: /var/log/javalin.log and /var/log/svelte.log"

# Wait for both processes
wait
EOF

RUN chmod +x /app/start.sh

EXPOSE 7777
EXPOSE 5432

CMD ["/app/start.sh"]